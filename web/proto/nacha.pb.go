// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/nacha.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExportFormat int32

const (
	ExportFormat_JSON    ExportFormat = 0
	ExportFormat_CSV     ExportFormat = 1
	ExportFormat_SQL     ExportFormat = 2
	ExportFormat_HTML    ExportFormat = 3
	ExportFormat_PDF     ExportFormat = 4
	ExportFormat_TXT     ExportFormat = 5
	ExportFormat_PARQUET ExportFormat = 6
)

// Enum value maps for ExportFormat.
var (
	ExportFormat_name = map[int32]string{
		0: "JSON",
		1: "CSV",
		2: "SQL",
		3: "HTML",
		4: "PDF",
		5: "TXT",
		6: "PARQUET",
	}
	ExportFormat_value = map[string]int32{
		"JSON":    0,
		"CSV":     1,
		"SQL":     2,
		"HTML":    3,
		"PDF":     4,
		"TXT":     5,
		"PARQUET": 6,
	}
)

func (x ExportFormat) Enum() *ExportFormat {
	p := new(ExportFormat)
	*p = x
	return p
}

func (x ExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_nacha_proto_enumTypes[0].Descriptor()
}

func (ExportFormat) Type() protoreflect.EnumType {
	return &file_api_proto_nacha_proto_enumTypes[0]
}

func (x ExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportFormat.Descriptor instead.
func (ExportFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{0}
}

type FileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileContent   []byte                 `protobuf:"bytes,1,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	mi := &file_api_proto_nacha_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{0}
}

func (x *FileRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *FileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ValidationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Errors        []*ValidationError     `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationResponse) Reset() {
	*x = ValidationResponse{}
	mi := &file_api_proto_nacha_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResponse) ProtoMessage() {}

func (x *ValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResponse.ProtoReflect.Descriptor instead.
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{1}
}

func (x *ValidationResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidationResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ValidationError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     string                 `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Location      string                 `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_api_proto_nacha_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{2}
}

func (x *ValidationError) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type NachaFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileHeader    *FileHeader            `protobuf:"bytes,1,opt,name=file_header,json=fileHeader,proto3" json:"file_header,omitempty"`
	Batches       []*BatchRequest        `protobuf:"bytes,2,rep,name=batches,proto3" json:"batches,omitempty"`
	FileControl   *FileControl           `protobuf:"bytes,3,opt,name=file_control,json=fileControl,proto3" json:"file_control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NachaFileRequest) Reset() {
	*x = NachaFileRequest{}
	mi := &file_api_proto_nacha_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NachaFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NachaFileRequest) ProtoMessage() {}

func (x *NachaFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NachaFileRequest.ProtoReflect.Descriptor instead.
func (*NachaFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{3}
}

func (x *NachaFileRequest) GetFileHeader() *FileHeader {
	if x != nil {
		return x.FileHeader
	}
	return nil
}

func (x *NachaFileRequest) GetBatches() []*BatchRequest {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *NachaFileRequest) GetFileControl() *FileControl {
	if x != nil {
		return x.FileControl
	}
	return nil
}

type FileHeader struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	RecordType               string                 `protobuf:"bytes,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	PriorityCode             string                 `protobuf:"bytes,2,opt,name=priority_code,json=priorityCode,proto3" json:"priority_code,omitempty"`
	ImmediateDestination     string                 `protobuf:"bytes,3,opt,name=immediate_destination,json=immediateDestination,proto3" json:"immediate_destination,omitempty"`
	ImmediateOrigin          string                 `protobuf:"bytes,4,opt,name=immediate_origin,json=immediateOrigin,proto3" json:"immediate_origin,omitempty"`
	FileCreationDate         string                 `protobuf:"bytes,5,opt,name=file_creation_date,json=fileCreationDate,proto3" json:"file_creation_date,omitempty"`
	FileCreationTime         string                 `protobuf:"bytes,6,opt,name=file_creation_time,json=fileCreationTime,proto3" json:"file_creation_time,omitempty"`
	FileIdModifier           string                 `protobuf:"bytes,7,opt,name=file_id_modifier,json=fileIdModifier,proto3" json:"file_id_modifier,omitempty"`
	RecordSize               string                 `protobuf:"bytes,8,opt,name=record_size,json=recordSize,proto3" json:"record_size,omitempty"`
	BlockingFactor           string                 `protobuf:"bytes,9,opt,name=blocking_factor,json=blockingFactor,proto3" json:"blocking_factor,omitempty"`
	FormatCode               string                 `protobuf:"bytes,10,opt,name=format_code,json=formatCode,proto3" json:"format_code,omitempty"`
	ImmediateDestinationName string                 `protobuf:"bytes,11,opt,name=immediate_destination_name,json=immediateDestinationName,proto3" json:"immediate_destination_name,omitempty"`
	ImmediateOriginName      string                 `protobuf:"bytes,12,opt,name=immediate_origin_name,json=immediateOriginName,proto3" json:"immediate_origin_name,omitempty"`
	ReferenceCode            string                 `protobuf:"bytes,13,opt,name=reference_code,json=referenceCode,proto3" json:"reference_code,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *FileHeader) Reset() {
	*x = FileHeader{}
	mi := &file_api_proto_nacha_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileHeader) ProtoMessage() {}

func (x *FileHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileHeader.ProtoReflect.Descriptor instead.
func (*FileHeader) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{4}
}

func (x *FileHeader) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *FileHeader) GetPriorityCode() string {
	if x != nil {
		return x.PriorityCode
	}
	return ""
}

func (x *FileHeader) GetImmediateDestination() string {
	if x != nil {
		return x.ImmediateDestination
	}
	return ""
}

func (x *FileHeader) GetImmediateOrigin() string {
	if x != nil {
		return x.ImmediateOrigin
	}
	return ""
}

func (x *FileHeader) GetFileCreationDate() string {
	if x != nil {
		return x.FileCreationDate
	}
	return ""
}

func (x *FileHeader) GetFileCreationTime() string {
	if x != nil {
		return x.FileCreationTime
	}
	return ""
}

func (x *FileHeader) GetFileIdModifier() string {
	if x != nil {
		return x.FileIdModifier
	}
	return ""
}

func (x *FileHeader) GetRecordSize() string {
	if x != nil {
		return x.RecordSize
	}
	return ""
}

func (x *FileHeader) GetBlockingFactor() string {
	if x != nil {
		return x.BlockingFactor
	}
	return ""
}

func (x *FileHeader) GetFormatCode() string {
	if x != nil {
		return x.FormatCode
	}
	return ""
}

func (x *FileHeader) GetImmediateDestinationName() string {
	if x != nil {
		return x.ImmediateDestinationName
	}
	return ""
}

func (x *FileHeader) GetImmediateOriginName() string {
	if x != nil {
		return x.ImmediateOriginName
	}
	return ""
}

func (x *FileHeader) GetReferenceCode() string {
	if x != nil {
		return x.ReferenceCode
	}
	return ""
}

type BatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *BatchHeader           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Entries       []*EntryDetailRequest  `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	Control       *BatchControl          `protobuf:"bytes,3,opt,name=control,proto3" json:"control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	mi := &file_api_proto_nacha_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{5}
}

func (x *BatchRequest) GetHeader() *BatchHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchRequest) GetEntries() []*EntryDetailRequest {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BatchRequest) GetControl() *BatchControl {
	if x != nil {
		return x.Control
	}
	return nil
}

type BatchHeader struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	RecordType                   string                 `protobuf:"bytes,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	ServiceClassCode             string                 `protobuf:"bytes,2,opt,name=service_class_code,json=serviceClassCode,proto3" json:"service_class_code,omitempty"`
	CompanyName                  string                 `protobuf:"bytes,3,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyDiscretionaryData     string                 `protobuf:"bytes,4,opt,name=company_discretionary_data,json=companyDiscretionaryData,proto3" json:"company_discretionary_data,omitempty"`
	CompanyIdentification        string                 `protobuf:"bytes,5,opt,name=company_identification,json=companyIdentification,proto3" json:"company_identification,omitempty"`
	StandardEntryClass           string                 `protobuf:"bytes,6,opt,name=standard_entry_class,json=standardEntryClass,proto3" json:"standard_entry_class,omitempty"`
	CompanyEntryDescription      string                 `protobuf:"bytes,7,opt,name=company_entry_description,json=companyEntryDescription,proto3" json:"company_entry_description,omitempty"`
	CompanyDescriptiveDate       string                 `protobuf:"bytes,8,opt,name=company_descriptive_date,json=companyDescriptiveDate,proto3" json:"company_descriptive_date,omitempty"`
	EffectiveEntryDate           string                 `protobuf:"bytes,9,opt,name=effective_entry_date,json=effectiveEntryDate,proto3" json:"effective_entry_date,omitempty"`
	SettlementDate               string                 `protobuf:"bytes,10,opt,name=settlement_date,json=settlementDate,proto3" json:"settlement_date,omitempty"`
	OriginatorStatusCode         string                 `protobuf:"bytes,11,opt,name=originator_status_code,json=originatorStatusCode,proto3" json:"originator_status_code,omitempty"`
	OriginatingDfiIdentification string                 `protobuf:"bytes,12,opt,name=originating_dfi_identification,json=originatingDfiIdentification,proto3" json:"originating_dfi_identification,omitempty"`
	BatchNumber                  string                 `protobuf:"bytes,13,opt,name=batch_number,json=batchNumber,proto3" json:"batch_number,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *BatchHeader) Reset() {
	*x = BatchHeader{}
	mi := &file_api_proto_nacha_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchHeader) ProtoMessage() {}

func (x *BatchHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchHeader.ProtoReflect.Descriptor instead.
func (*BatchHeader) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{6}
}

func (x *BatchHeader) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *BatchHeader) GetServiceClassCode() string {
	if x != nil {
		return x.ServiceClassCode
	}
	return ""
}

func (x *BatchHeader) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *BatchHeader) GetCompanyDiscretionaryData() string {
	if x != nil {
		return x.CompanyDiscretionaryData
	}
	return ""
}

func (x *BatchHeader) GetCompanyIdentification() string {
	if x != nil {
		return x.CompanyIdentification
	}
	return ""
}

func (x *BatchHeader) GetStandardEntryClass() string {
	if x != nil {
		return x.StandardEntryClass
	}
	return ""
}

func (x *BatchHeader) GetCompanyEntryDescription() string {
	if x != nil {
		return x.CompanyEntryDescription
	}
	return ""
}

func (x *BatchHeader) GetCompanyDescriptiveDate() string {
	if x != nil {
		return x.CompanyDescriptiveDate
	}
	return ""
}

func (x *BatchHeader) GetEffectiveEntryDate() string {
	if x != nil {
		return x.EffectiveEntryDate
	}
	return ""
}

func (x *BatchHeader) GetSettlementDate() string {
	if x != nil {
		return x.SettlementDate
	}
	return ""
}

func (x *BatchHeader) GetOriginatorStatusCode() string {
	if x != nil {
		return x.OriginatorStatusCode
	}
	return ""
}

func (x *BatchHeader) GetOriginatingDfiIdentification() string {
	if x != nil {
		return x.OriginatingDfiIdentification
	}
	return ""
}

func (x *BatchHeader) GetBatchNumber() string {
	if x != nil {
		return x.BatchNumber
	}
	return ""
}

type EntryDetailRequest struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	RecordType                     string                 `protobuf:"bytes,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	TransactionCode                string                 `protobuf:"bytes,2,opt,name=transaction_code,json=transactionCode,proto3" json:"transaction_code,omitempty"`
	ReceivingDfiIdentification     string                 `protobuf:"bytes,3,opt,name=receiving_dfi_identification,json=receivingDfiIdentification,proto3" json:"receiving_dfi_identification,omitempty"`
	CheckDigit                     string                 `protobuf:"bytes,4,opt,name=check_digit,json=checkDigit,proto3" json:"check_digit,omitempty"`
	DfiAccountNumber               string                 `protobuf:"bytes,5,opt,name=dfi_account_number,json=dfiAccountNumber,proto3" json:"dfi_account_number,omitempty"`
	Amount                         int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	IndividualIdentificationNumber string                 `protobuf:"bytes,7,opt,name=individual_identification_number,json=individualIdentificationNumber,proto3" json:"individual_identification_number,omitempty"`
	IndividualName                 string                 `protobuf:"bytes,8,opt,name=individual_name,json=individualName,proto3" json:"individual_name,omitempty"`
	DiscretionaryData              string                 `protobuf:"bytes,9,opt,name=discretionary_data,json=discretionaryData,proto3" json:"discretionary_data,omitempty"`
	AddendaRecordIndicator         string                 `protobuf:"bytes,10,opt,name=addenda_record_indicator,json=addendaRecordIndicator,proto3" json:"addenda_record_indicator,omitempty"`
	TraceNumber                    string                 `protobuf:"bytes,11,opt,name=trace_number,json=traceNumber,proto3" json:"trace_number,omitempty"`
	AddendaRecords                 []*AddendaRecord       `protobuf:"bytes,12,rep,name=addenda_records,json=addendaRecords,proto3" json:"addenda_records,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *EntryDetailRequest) Reset() {
	*x = EntryDetailRequest{}
	mi := &file_api_proto_nacha_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryDetailRequest) ProtoMessage() {}

func (x *EntryDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryDetailRequest.ProtoReflect.Descriptor instead.
func (*EntryDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{7}
}

func (x *EntryDetailRequest) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *EntryDetailRequest) GetTransactionCode() string {
	if x != nil {
		return x.TransactionCode
	}
	return ""
}

func (x *EntryDetailRequest) GetReceivingDfiIdentification() string {
	if x != nil {
		return x.ReceivingDfiIdentification
	}
	return ""
}

func (x *EntryDetailRequest) GetCheckDigit() string {
	if x != nil {
		return x.CheckDigit
	}
	return ""
}

func (x *EntryDetailRequest) GetDfiAccountNumber() string {
	if x != nil {
		return x.DfiAccountNumber
	}
	return ""
}

func (x *EntryDetailRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EntryDetailRequest) GetIndividualIdentificationNumber() string {
	if x != nil {
		return x.IndividualIdentificationNumber
	}
	return ""
}

func (x *EntryDetailRequest) GetIndividualName() string {
	if x != nil {
		return x.IndividualName
	}
	return ""
}

func (x *EntryDetailRequest) GetDiscretionaryData() string {
	if x != nil {
		return x.DiscretionaryData
	}
	return ""
}

func (x *EntryDetailRequest) GetAddendaRecordIndicator() string {
	if x != nil {
		return x.AddendaRecordIndicator
	}
	return ""
}

func (x *EntryDetailRequest) GetTraceNumber() string {
	if x != nil {
		return x.TraceNumber
	}
	return ""
}

func (x *EntryDetailRequest) GetAddendaRecords() []*AddendaRecord {
	if x != nil {
		return x.AddendaRecords
	}
	return nil
}

type AddendaRecord struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	AddendaTypeCode           string                 `protobuf:"bytes,1,opt,name=addenda_type_code,json=addendaTypeCode,proto3" json:"addenda_type_code,omitempty"`
	PaymentRelatedInformation string                 `protobuf:"bytes,2,opt,name=payment_related_information,json=paymentRelatedInformation,proto3" json:"payment_related_information,omitempty"`
	AddendaSequenceNumber     string                 `protobuf:"bytes,3,opt,name=addenda_sequence_number,json=addendaSequenceNumber,proto3" json:"addenda_sequence_number,omitempty"`
	EntryDetailSequenceNumber string                 `protobuf:"bytes,4,opt,name=entry_detail_sequence_number,json=entryDetailSequenceNumber,proto3" json:"entry_detail_sequence_number,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AddendaRecord) Reset() {
	*x = AddendaRecord{}
	mi := &file_api_proto_nacha_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddendaRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddendaRecord) ProtoMessage() {}

func (x *AddendaRecord) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddendaRecord.ProtoReflect.Descriptor instead.
func (*AddendaRecord) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{8}
}

func (x *AddendaRecord) GetAddendaTypeCode() string {
	if x != nil {
		return x.AddendaTypeCode
	}
	return ""
}

func (x *AddendaRecord) GetPaymentRelatedInformation() string {
	if x != nil {
		return x.PaymentRelatedInformation
	}
	return ""
}

func (x *AddendaRecord) GetAddendaSequenceNumber() string {
	if x != nil {
		return x.AddendaSequenceNumber
	}
	return ""
}

func (x *AddendaRecord) GetEntryDetailSequenceNumber() string {
	if x != nil {
		return x.EntryDetailSequenceNumber
	}
	return ""
}

type BatchControl struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	RecordType                   string                 `protobuf:"bytes,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	ServiceClassCode             string                 `protobuf:"bytes,2,opt,name=service_class_code,json=serviceClassCode,proto3" json:"service_class_code,omitempty"`
	EntryAddendaCount            int32                  `protobuf:"varint,3,opt,name=entry_addenda_count,json=entryAddendaCount,proto3" json:"entry_addenda_count,omitempty"`
	EntryHash                    string                 `protobuf:"bytes,4,opt,name=entry_hash,json=entryHash,proto3" json:"entry_hash,omitempty"`
	TotalDebitAmount             int64                  `protobuf:"varint,5,opt,name=total_debit_amount,json=totalDebitAmount,proto3" json:"total_debit_amount,omitempty"`
	TotalCreditAmount            int64                  `protobuf:"varint,6,opt,name=total_credit_amount,json=totalCreditAmount,proto3" json:"total_credit_amount,omitempty"`
	CompanyIdentification        string                 `protobuf:"bytes,7,opt,name=company_identification,json=companyIdentification,proto3" json:"company_identification,omitempty"`
	MessageAuthenticationCode    string                 `protobuf:"bytes,8,opt,name=message_authentication_code,json=messageAuthenticationCode,proto3" json:"message_authentication_code,omitempty"`
	Reserved                     string                 `protobuf:"bytes,9,opt,name=reserved,proto3" json:"reserved,omitempty"`
	OriginatingDfiIdentification string                 `protobuf:"bytes,10,opt,name=originating_dfi_identification,json=originatingDfiIdentification,proto3" json:"originating_dfi_identification,omitempty"`
	BatchNumber                  string                 `protobuf:"bytes,11,opt,name=batch_number,json=batchNumber,proto3" json:"batch_number,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *BatchControl) Reset() {
	*x = BatchControl{}
	mi := &file_api_proto_nacha_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchControl) ProtoMessage() {}

func (x *BatchControl) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchControl.ProtoReflect.Descriptor instead.
func (*BatchControl) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{9}
}

func (x *BatchControl) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *BatchControl) GetServiceClassCode() string {
	if x != nil {
		return x.ServiceClassCode
	}
	return ""
}

func (x *BatchControl) GetEntryAddendaCount() int32 {
	if x != nil {
		return x.EntryAddendaCount
	}
	return 0
}

func (x *BatchControl) GetEntryHash() string {
	if x != nil {
		return x.EntryHash
	}
	return ""
}

func (x *BatchControl) GetTotalDebitAmount() int64 {
	if x != nil {
		return x.TotalDebitAmount
	}
	return 0
}

func (x *BatchControl) GetTotalCreditAmount() int64 {
	if x != nil {
		return x.TotalCreditAmount
	}
	return 0
}

func (x *BatchControl) GetCompanyIdentification() string {
	if x != nil {
		return x.CompanyIdentification
	}
	return ""
}

func (x *BatchControl) GetMessageAuthenticationCode() string {
	if x != nil {
		return x.MessageAuthenticationCode
	}
	return ""
}

func (x *BatchControl) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *BatchControl) GetOriginatingDfiIdentification() string {
	if x != nil {
		return x.OriginatingDfiIdentification
	}
	return ""
}

func (x *BatchControl) GetBatchNumber() string {
	if x != nil {
		return x.BatchNumber
	}
	return ""
}

type FileControl struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RecordType        string                 `protobuf:"bytes,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	BatchCount        int32                  `protobuf:"varint,2,opt,name=batch_count,json=batchCount,proto3" json:"batch_count,omitempty"`
	BlockCount        int32                  `protobuf:"varint,3,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	EntryAddendaCount int32                  `protobuf:"varint,4,opt,name=entry_addenda_count,json=entryAddendaCount,proto3" json:"entry_addenda_count,omitempty"`
	EntryHash         string                 `protobuf:"bytes,5,opt,name=entry_hash,json=entryHash,proto3" json:"entry_hash,omitempty"`
	TotalDebitAmount  int64                  `protobuf:"varint,6,opt,name=total_debit_amount,json=totalDebitAmount,proto3" json:"total_debit_amount,omitempty"`
	TotalCreditAmount int64                  `protobuf:"varint,7,opt,name=total_credit_amount,json=totalCreditAmount,proto3" json:"total_credit_amount,omitempty"`
	Reserved          string                 `protobuf:"bytes,8,opt,name=reserved,proto3" json:"reserved,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FileControl) Reset() {
	*x = FileControl{}
	mi := &file_api_proto_nacha_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileControl) ProtoMessage() {}

func (x *FileControl) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileControl.ProtoReflect.Descriptor instead.
func (*FileControl) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{10}
}

func (x *FileControl) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *FileControl) GetBatchCount() int32 {
	if x != nil {
		return x.BatchCount
	}
	return 0
}

func (x *FileControl) GetBlockCount() int32 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

func (x *FileControl) GetEntryAddendaCount() int32 {
	if x != nil {
		return x.EntryAddendaCount
	}
	return 0
}

func (x *FileControl) GetEntryHash() string {
	if x != nil {
		return x.EntryHash
	}
	return ""
}

func (x *FileControl) GetTotalDebitAmount() int64 {
	if x != nil {
		return x.TotalDebitAmount
	}
	return 0
}

func (x *FileControl) GetTotalCreditAmount() int64 {
	if x != nil {
		return x.TotalCreditAmount
	}
	return 0
}

func (x *FileControl) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

type FileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileContent   []byte                 `protobuf:"bytes,1,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	mi := &file_api_proto_nacha_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{11}
}

func (x *FileResponse) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *FileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileContent   []byte                 `protobuf:"bytes,1,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	Format        ExportFormat           `protobuf:"varint,2,opt,name=format,proto3,enum=nacha.ExportFormat" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	mi := &file_api_proto_nacha_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{12}
}

func (x *ExportRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *ExportRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_JSON
}

type ExportResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ExportedContent []byte                 `protobuf:"bytes,1,opt,name=exported_content,json=exportedContent,proto3" json:"exported_content,omitempty"`
	FileType        string                 `protobuf:"bytes,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	Message         string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExportResponse) Reset() {
	*x = ExportResponse{}
	mi := &file_api_proto_nacha_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponse) ProtoMessage() {}

func (x *ExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponse.ProtoReflect.Descriptor instead.
func (*ExportResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{13}
}

func (x *ExportResponse) GetExportedContent() []byte {
	if x != nil {
		return x.ExportedContent
	}
	return nil
}

func (x *ExportResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ExportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FileDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileHeader    *FileHeader            `protobuf:"bytes,1,opt,name=file_header,json=fileHeader,proto3" json:"file_header,omitempty"`
	Batches       []*BatchDetails        `protobuf:"bytes,2,rep,name=batches,proto3" json:"batches,omitempty"`
	FileControl   *FileControl           `protobuf:"bytes,3,opt,name=file_control,json=fileControl,proto3" json:"file_control,omitempty"`
	Summary       map[string]string      `protobuf:"bytes,4,rep,name=summary,proto3" json:"summary,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDetailsResponse) Reset() {
	*x = FileDetailsResponse{}
	mi := &file_api_proto_nacha_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDetailsResponse) ProtoMessage() {}

func (x *FileDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDetailsResponse.ProtoReflect.Descriptor instead.
func (*FileDetailsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{14}
}

func (x *FileDetailsResponse) GetFileHeader() *FileHeader {
	if x != nil {
		return x.FileHeader
	}
	return nil
}

func (x *FileDetailsResponse) GetBatches() []*BatchDetails {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *FileDetailsResponse) GetFileControl() *FileControl {
	if x != nil {
		return x.FileControl
	}
	return nil
}

func (x *FileDetailsResponse) GetSummary() map[string]string {
	if x != nil {
		return x.Summary
	}
	return nil
}

type BatchDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *BatchHeader           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Entries       []*EntryDetail         `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	Control       *BatchControl          `protobuf:"bytes,3,opt,name=control,proto3" json:"control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDetails) Reset() {
	*x = BatchDetails{}
	mi := &file_api_proto_nacha_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDetails) ProtoMessage() {}

func (x *BatchDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDetails.ProtoReflect.Descriptor instead.
func (*BatchDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{15}
}

func (x *BatchDetails) GetHeader() *BatchHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchDetails) GetEntries() []*EntryDetail {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BatchDetails) GetControl() *BatchControl {
	if x != nil {
		return x.Control
	}
	return nil
}

type DetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileContent   []byte                 `protobuf:"bytes,1,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	DetailType    string                 `protobuf:"bytes,2,opt,name=detail_type,json=detailType,proto3" json:"detail_type,omitempty"` // "batch" or "entry"
	Identifier    string                 `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`                   // batch number or trace number
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailRequest) Reset() {
	*x = DetailRequest{}
	mi := &file_api_proto_nacha_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailRequest) ProtoMessage() {}

func (x *DetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailRequest.ProtoReflect.Descriptor instead.
func (*DetailRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{16}
}

func (x *DetailRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *DetailRequest) GetDetailType() string {
	if x != nil {
		return x.DetailType
	}
	return ""
}

func (x *DetailRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type DetailResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Detail:
	//
	//	*DetailResponse_Batch
	//	*DetailResponse_Entry
	Detail        isDetailResponse_Detail `protobuf_oneof:"detail"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailResponse) Reset() {
	*x = DetailResponse{}
	mi := &file_api_proto_nacha_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailResponse) ProtoMessage() {}

func (x *DetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailResponse.ProtoReflect.Descriptor instead.
func (*DetailResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{17}
}

func (x *DetailResponse) GetDetail() isDetailResponse_Detail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *DetailResponse) GetBatch() *BatchDetails {
	if x != nil {
		if x, ok := x.Detail.(*DetailResponse_Batch); ok {
			return x.Batch
		}
	}
	return nil
}

func (x *DetailResponse) GetEntry() *EntryDetail {
	if x != nil {
		if x, ok := x.Detail.(*DetailResponse_Entry); ok {
			return x.Entry
		}
	}
	return nil
}

type isDetailResponse_Detail interface {
	isDetailResponse_Detail()
}

type DetailResponse_Batch struct {
	Batch *BatchDetails `protobuf:"bytes,1,opt,name=batch,proto3,oneof"`
}

type DetailResponse_Entry struct {
	Entry *EntryDetail `protobuf:"bytes,2,opt,name=entry,proto3,oneof"`
}

func (*DetailResponse_Batch) isDetailResponse_Detail() {}

func (*DetailResponse_Entry) isDetailResponse_Detail() {}

type EntryDetail struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	TransactionCode                string                 `protobuf:"bytes,1,opt,name=transaction_code,json=transactionCode,proto3" json:"transaction_code,omitempty"`
	ReceivingDfiIdentification     string                 `protobuf:"bytes,2,opt,name=receiving_dfi_identification,json=receivingDfiIdentification,proto3" json:"receiving_dfi_identification,omitempty"`
	CheckDigit                     string                 `protobuf:"bytes,3,opt,name=check_digit,json=checkDigit,proto3" json:"check_digit,omitempty"`
	DfiAccountNumber               string                 `protobuf:"bytes,4,opt,name=dfi_account_number,json=dfiAccountNumber,proto3" json:"dfi_account_number,omitempty"`
	Amount                         int64                  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	IndividualIdentificationNumber string                 `protobuf:"bytes,6,opt,name=individual_identification_number,json=individualIdentificationNumber,proto3" json:"individual_identification_number,omitempty"`
	IndividualName                 string                 `protobuf:"bytes,7,opt,name=individual_name,json=individualName,proto3" json:"individual_name,omitempty"`
	DiscretionaryData              string                 `protobuf:"bytes,8,opt,name=discretionary_data,json=discretionaryData,proto3" json:"discretionary_data,omitempty"`
	AddendaRecordIndicator         string                 `protobuf:"bytes,9,opt,name=addenda_record_indicator,json=addendaRecordIndicator,proto3" json:"addenda_record_indicator,omitempty"`
	TraceNumber                    string                 `protobuf:"bytes,10,opt,name=trace_number,json=traceNumber,proto3" json:"trace_number,omitempty"`
	AddendaRecords                 []*AddendaRecord       `protobuf:"bytes,11,rep,name=addenda_records,json=addendaRecords,proto3" json:"addenda_records,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *EntryDetail) Reset() {
	*x = EntryDetail{}
	mi := &file_api_proto_nacha_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryDetail) ProtoMessage() {}

func (x *EntryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nacha_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryDetail.ProtoReflect.Descriptor instead.
func (*EntryDetail) Descriptor() ([]byte, []int) {
	return file_api_proto_nacha_proto_rawDescGZIP(), []int{18}
}

func (x *EntryDetail) GetTransactionCode() string {
	if x != nil {
		return x.TransactionCode
	}
	return ""
}

func (x *EntryDetail) GetReceivingDfiIdentification() string {
	if x != nil {
		return x.ReceivingDfiIdentification
	}
	return ""
}

func (x *EntryDetail) GetCheckDigit() string {
	if x != nil {
		return x.CheckDigit
	}
	return ""
}

func (x *EntryDetail) GetDfiAccountNumber() string {
	if x != nil {
		return x.DfiAccountNumber
	}
	return ""
}

func (x *EntryDetail) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EntryDetail) GetIndividualIdentificationNumber() string {
	if x != nil {
		return x.IndividualIdentificationNumber
	}
	return ""
}

func (x *EntryDetail) GetIndividualName() string {
	if x != nil {
		return x.IndividualName
	}
	return ""
}

func (x *EntryDetail) GetDiscretionaryData() string {
	if x != nil {
		return x.DiscretionaryData
	}
	return ""
}

func (x *EntryDetail) GetAddendaRecordIndicator() string {
	if x != nil {
		return x.AddendaRecordIndicator
	}
	return ""
}

func (x *EntryDetail) GetTraceNumber() string {
	if x != nil {
		return x.TraceNumber
	}
	return ""
}

func (x *EntryDetail) GetAddendaRecords() []*AddendaRecord {
	if x != nil {
		return x.AddendaRecords
	}
	return nil
}

var File_api_proto_nacha_proto protoreflect.FileDescriptor

const file_api_proto_nacha_proto_rawDesc = "" +
	"\n" +
	"\x15api/proto/nacha.proto\x12\x05nacha\"M\n" +
	"\vFileRequest\x12!\n" +
	"\ffile_content\x18\x01 \x01(\fR\vfileContent\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\"_\n" +
	"\x12ValidationResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x12.\n" +
	"\x06errors\x18\x02 \x03(\v2\x16.nacha.ValidationErrorR\x06errors\"f\n" +
	"\x0fValidationError\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\tR\terrorCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\"\xac\x01\n" +
	"\x10NachaFileRequest\x122\n" +
	"\vfile_header\x18\x01 \x01(\v2\x11.nacha.FileHeaderR\n" +
	"fileHeader\x12-\n" +
	"\abatches\x18\x02 \x03(\v2\x13.nacha.BatchRequestR\abatches\x125\n" +
	"\ffile_control\x18\x03 \x01(\v2\x12.nacha.FileControlR\vfileControl\"\xbc\x04\n" +
	"\n" +
	"FileHeader\x12\x1f\n" +
	"\vrecord_type\x18\x01 \x01(\tR\n" +
	"recordType\x12#\n" +
	"\rpriority_code\x18\x02 \x01(\tR\fpriorityCode\x123\n" +
	"\x15immediate_destination\x18\x03 \x01(\tR\x14immediateDestination\x12)\n" +
	"\x10immediate_origin\x18\x04 \x01(\tR\x0fimmediateOrigin\x12,\n" +
	"\x12file_creation_date\x18\x05 \x01(\tR\x10fileCreationDate\x12,\n" +
	"\x12file_creation_time\x18\x06 \x01(\tR\x10fileCreationTime\x12(\n" +
	"\x10file_id_modifier\x18\a \x01(\tR\x0efileIdModifier\x12\x1f\n" +
	"\vrecord_size\x18\b \x01(\tR\n" +
	"recordSize\x12'\n" +
	"\x0fblocking_factor\x18\t \x01(\tR\x0eblockingFactor\x12\x1f\n" +
	"\vformat_code\x18\n" +
	" \x01(\tR\n" +
	"formatCode\x12<\n" +
	"\x1aimmediate_destination_name\x18\v \x01(\tR\x18immediateDestinationName\x122\n" +
	"\x15immediate_origin_name\x18\f \x01(\tR\x13immediateOriginName\x12%\n" +
	"\x0ereference_code\x18\r \x01(\tR\rreferenceCode\"\x9e\x01\n" +
	"\fBatchRequest\x12*\n" +
	"\x06header\x18\x01 \x01(\v2\x12.nacha.BatchHeaderR\x06header\x123\n" +
	"\aentries\x18\x02 \x03(\v2\x19.nacha.EntryDetailRequestR\aentries\x12-\n" +
	"\acontrol\x18\x03 \x01(\v2\x13.nacha.BatchControlR\acontrol\"\x96\x05\n" +
	"\vBatchHeader\x12\x1f\n" +
	"\vrecord_type\x18\x01 \x01(\tR\n" +
	"recordType\x12,\n" +
	"\x12service_class_code\x18\x02 \x01(\tR\x10serviceClassCode\x12!\n" +
	"\fcompany_name\x18\x03 \x01(\tR\vcompanyName\x12<\n" +
	"\x1acompany_discretionary_data\x18\x04 \x01(\tR\x18companyDiscretionaryData\x125\n" +
	"\x16company_identification\x18\x05 \x01(\tR\x15companyIdentification\x120\n" +
	"\x14standard_entry_class\x18\x06 \x01(\tR\x12standardEntryClass\x12:\n" +
	"\x19company_entry_description\x18\a \x01(\tR\x17companyEntryDescription\x128\n" +
	"\x18company_descriptive_date\x18\b \x01(\tR\x16companyDescriptiveDate\x120\n" +
	"\x14effective_entry_date\x18\t \x01(\tR\x12effectiveEntryDate\x12'\n" +
	"\x0fsettlement_date\x18\n" +
	" \x01(\tR\x0esettlementDate\x124\n" +
	"\x16originator_status_code\x18\v \x01(\tR\x14originatorStatusCode\x12D\n" +
	"\x1eoriginating_dfi_identification\x18\f \x01(\tR\x1coriginatingDfiIdentification\x12!\n" +
	"\fbatch_number\x18\r \x01(\tR\vbatchNumber\"\xc7\x04\n" +
	"\x12EntryDetailRequest\x12\x1f\n" +
	"\vrecord_type\x18\x01 \x01(\tR\n" +
	"recordType\x12)\n" +
	"\x10transaction_code\x18\x02 \x01(\tR\x0ftransactionCode\x12@\n" +
	"\x1creceiving_dfi_identification\x18\x03 \x01(\tR\x1areceivingDfiIdentification\x12\x1f\n" +
	"\vcheck_digit\x18\x04 \x01(\tR\n" +
	"checkDigit\x12,\n" +
	"\x12dfi_account_number\x18\x05 \x01(\tR\x10dfiAccountNumber\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\x12H\n" +
	" individual_identification_number\x18\a \x01(\tR\x1eindividualIdentificationNumber\x12'\n" +
	"\x0findividual_name\x18\b \x01(\tR\x0eindividualName\x12-\n" +
	"\x12discretionary_data\x18\t \x01(\tR\x11discretionaryData\x128\n" +
	"\x18addenda_record_indicator\x18\n" +
	" \x01(\tR\x16addendaRecordIndicator\x12!\n" +
	"\ftrace_number\x18\v \x01(\tR\vtraceNumber\x12=\n" +
	"\x0faddenda_records\x18\f \x03(\v2\x14.nacha.AddendaRecordR\x0eaddendaRecords\"\xf4\x01\n" +
	"\rAddendaRecord\x12*\n" +
	"\x11addenda_type_code\x18\x01 \x01(\tR\x0faddendaTypeCode\x12>\n" +
	"\x1bpayment_related_information\x18\x02 \x01(\tR\x19paymentRelatedInformation\x126\n" +
	"\x17addenda_sequence_number\x18\x03 \x01(\tR\x15addendaSequenceNumber\x12?\n" +
	"\x1centry_detail_sequence_number\x18\x04 \x01(\tR\x19entryDetailSequenceNumber\"\x86\x04\n" +
	"\fBatchControl\x12\x1f\n" +
	"\vrecord_type\x18\x01 \x01(\tR\n" +
	"recordType\x12,\n" +
	"\x12service_class_code\x18\x02 \x01(\tR\x10serviceClassCode\x12.\n" +
	"\x13entry_addenda_count\x18\x03 \x01(\x05R\x11entryAddendaCount\x12\x1d\n" +
	"\n" +
	"entry_hash\x18\x04 \x01(\tR\tentryHash\x12,\n" +
	"\x12total_debit_amount\x18\x05 \x01(\x03R\x10totalDebitAmount\x12.\n" +
	"\x13total_credit_amount\x18\x06 \x01(\x03R\x11totalCreditAmount\x125\n" +
	"\x16company_identification\x18\a \x01(\tR\x15companyIdentification\x12>\n" +
	"\x1bmessage_authentication_code\x18\b \x01(\tR\x19messageAuthenticationCode\x12\x1a\n" +
	"\breserved\x18\t \x01(\tR\breserved\x12D\n" +
	"\x1eoriginating_dfi_identification\x18\n" +
	" \x01(\tR\x1coriginatingDfiIdentification\x12!\n" +
	"\fbatch_number\x18\v \x01(\tR\vbatchNumber\"\xb9\x02\n" +
	"\vFileControl\x12\x1f\n" +
	"\vrecord_type\x18\x01 \x01(\tR\n" +
	"recordType\x12\x1f\n" +
	"\vbatch_count\x18\x02 \x01(\x05R\n" +
	"batchCount\x12\x1f\n" +
	"\vblock_count\x18\x03 \x01(\x05R\n" +
	"blockCount\x12.\n" +
	"\x13entry_addenda_count\x18\x04 \x01(\x05R\x11entryAddendaCount\x12\x1d\n" +
	"\n" +
	"entry_hash\x18\x05 \x01(\tR\tentryHash\x12,\n" +
	"\x12total_debit_amount\x18\x06 \x01(\x03R\x10totalDebitAmount\x12.\n" +
	"\x13total_credit_amount\x18\a \x01(\x03R\x11totalCreditAmount\x12\x1a\n" +
	"\breserved\x18\b \x01(\tR\breserved\"K\n" +
	"\fFileResponse\x12!\n" +
	"\ffile_content\x18\x01 \x01(\fR\vfileContent\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"_\n" +
	"\rExportRequest\x12!\n" +
	"\ffile_content\x18\x01 \x01(\fR\vfileContent\x12+\n" +
	"\x06format\x18\x02 \x01(\x0e2\x13.nacha.ExportFormatR\x06format\"r\n" +
	"\x0eExportResponse\x12)\n" +
	"\x10exported_content\x18\x01 \x01(\fR\x0fexportedContent\x12\x1b\n" +
	"\tfile_type\x18\x02 \x01(\tR\bfileType\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xae\x02\n" +
	"\x13FileDetailsResponse\x122\n" +
	"\vfile_header\x18\x01 \x01(\v2\x11.nacha.FileHeaderR\n" +
	"fileHeader\x12-\n" +
	"\abatches\x18\x02 \x03(\v2\x13.nacha.BatchDetailsR\abatches\x125\n" +
	"\ffile_control\x18\x03 \x01(\v2\x12.nacha.FileControlR\vfileControl\x12A\n" +
	"\asummary\x18\x04 \x03(\v2'.nacha.FileDetailsResponse.SummaryEntryR\asummary\x1a:\n" +
	"\fSummaryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x01\n" +
	"\fBatchDetails\x12*\n" +
	"\x06header\x18\x01 \x01(\v2\x12.nacha.BatchHeaderR\x06header\x12,\n" +
	"\aentries\x18\x02 \x03(\v2\x12.nacha.EntryDetailR\aentries\x12-\n" +
	"\acontrol\x18\x03 \x01(\v2\x13.nacha.BatchControlR\acontrol\"s\n" +
	"\rDetailRequest\x12!\n" +
	"\ffile_content\x18\x01 \x01(\fR\vfileContent\x12\x1f\n" +
	"\vdetail_type\x18\x02 \x01(\tR\n" +
	"detailType\x12\x1e\n" +
	"\n" +
	"identifier\x18\x03 \x01(\tR\n" +
	"identifier\"s\n" +
	"\x0eDetailResponse\x12+\n" +
	"\x05batch\x18\x01 \x01(\v2\x13.nacha.BatchDetailsH\x00R\x05batch\x12*\n" +
	"\x05entry\x18\x02 \x01(\v2\x12.nacha.EntryDetailH\x00R\x05entryB\b\n" +
	"\x06detail\"\x9f\x04\n" +
	"\vEntryDetail\x12)\n" +
	"\x10transaction_code\x18\x01 \x01(\tR\x0ftransactionCode\x12@\n" +
	"\x1creceiving_dfi_identification\x18\x02 \x01(\tR\x1areceivingDfiIdentification\x12\x1f\n" +
	"\vcheck_digit\x18\x03 \x01(\tR\n" +
	"checkDigit\x12,\n" +
	"\x12dfi_account_number\x18\x04 \x01(\tR\x10dfiAccountNumber\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x03R\x06amount\x12H\n" +
	" individual_identification_number\x18\x06 \x01(\tR\x1eindividualIdentificationNumber\x12'\n" +
	"\x0findividual_name\x18\a \x01(\tR\x0eindividualName\x12-\n" +
	"\x12discretionary_data\x18\b \x01(\tR\x11discretionaryData\x128\n" +
	"\x18addenda_record_indicator\x18\t \x01(\tR\x16addendaRecordIndicator\x12!\n" +
	"\ftrace_number\x18\n" +
	" \x01(\tR\vtraceNumber\x12=\n" +
	"\x0faddenda_records\x18\v \x03(\v2\x14.nacha.AddendaRecordR\x0eaddendaRecords*S\n" +
	"\fExportFormat\x12\b\n" +
	"\x04JSON\x10\x00\x12\a\n" +
	"\x03CSV\x10\x01\x12\a\n" +
	"\x03SQL\x10\x02\x12\b\n" +
	"\x04HTML\x10\x03\x12\a\n" +
	"\x03PDF\x10\x04\x12\a\n" +
	"\x03TXT\x10\x05\x12\v\n" +
	"\aPARQUET\x10\x062\xc6\x02\n" +
	"\fNachaService\x12?\n" +
	"\fValidateFile\x12\x12.nacha.FileRequest\x1a\x19.nacha.ValidationResponse\"\x00\x12<\n" +
	"\n" +
	"CreateFile\x12\x17.nacha.NachaFileRequest\x1a\x13.nacha.FileResponse\"\x00\x12;\n" +
	"\n" +
	"ExportFile\x12\x14.nacha.ExportRequest\x1a\x15.nacha.ExportResponse\"\x00\x12<\n" +
	"\bViewFile\x12\x12.nacha.FileRequest\x1a\x1a.nacha.FileDetailsResponse\"\x00\x12<\n" +
	"\vViewDetails\x12\x14.nacha.DetailRequest\x1a\x15.nacha.DetailResponse\"\x00B$Z\"github.com/nacha-service/api/protob\x06proto3"

var (
	file_api_proto_nacha_proto_rawDescOnce sync.Once
	file_api_proto_nacha_proto_rawDescData []byte
)

func file_api_proto_nacha_proto_rawDescGZIP() []byte {
	file_api_proto_nacha_proto_rawDescOnce.Do(func() {
		file_api_proto_nacha_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_nacha_proto_rawDesc), len(file_api_proto_nacha_proto_rawDesc)))
	})
	return file_api_proto_nacha_proto_rawDescData
}

var file_api_proto_nacha_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_nacha_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_proto_nacha_proto_goTypes = []any{
	(ExportFormat)(0),           // 0: nacha.ExportFormat
	(*FileRequest)(nil),         // 1: nacha.FileRequest
	(*ValidationResponse)(nil),  // 2: nacha.ValidationResponse
	(*ValidationError)(nil),     // 3: nacha.ValidationError
	(*NachaFileRequest)(nil),    // 4: nacha.NachaFileRequest
	(*FileHeader)(nil),          // 5: nacha.FileHeader
	(*BatchRequest)(nil),        // 6: nacha.BatchRequest
	(*BatchHeader)(nil),         // 7: nacha.BatchHeader
	(*EntryDetailRequest)(nil),  // 8: nacha.EntryDetailRequest
	(*AddendaRecord)(nil),       // 9: nacha.AddendaRecord
	(*BatchControl)(nil),        // 10: nacha.BatchControl
	(*FileControl)(nil),         // 11: nacha.FileControl
	(*FileResponse)(nil),        // 12: nacha.FileResponse
	(*ExportRequest)(nil),       // 13: nacha.ExportRequest
	(*ExportResponse)(nil),      // 14: nacha.ExportResponse
	(*FileDetailsResponse)(nil), // 15: nacha.FileDetailsResponse
	(*BatchDetails)(nil),        // 16: nacha.BatchDetails
	(*DetailRequest)(nil),       // 17: nacha.DetailRequest
	(*DetailResponse)(nil),      // 18: nacha.DetailResponse
	(*EntryDetail)(nil),         // 19: nacha.EntryDetail
	nil,                         // 20: nacha.FileDetailsResponse.SummaryEntry
}
var file_api_proto_nacha_proto_depIdxs = []int32{
	3,  // 0: nacha.ValidationResponse.errors:type_name -> nacha.ValidationError
	5,  // 1: nacha.NachaFileRequest.file_header:type_name -> nacha.FileHeader
	6,  // 2: nacha.NachaFileRequest.batches:type_name -> nacha.BatchRequest
	11, // 3: nacha.NachaFileRequest.file_control:type_name -> nacha.FileControl
	7,  // 4: nacha.BatchRequest.header:type_name -> nacha.BatchHeader
	8,  // 5: nacha.BatchRequest.entries:type_name -> nacha.EntryDetailRequest
	10, // 6: nacha.BatchRequest.control:type_name -> nacha.BatchControl
	9,  // 7: nacha.EntryDetailRequest.addenda_records:type_name -> nacha.AddendaRecord
	0,  // 8: nacha.ExportRequest.format:type_name -> nacha.ExportFormat
	5,  // 9: nacha.FileDetailsResponse.file_header:type_name -> nacha.FileHeader
	16, // 10: nacha.FileDetailsResponse.batches:type_name -> nacha.BatchDetails
	11, // 11: nacha.FileDetailsResponse.file_control:type_name -> nacha.FileControl
	20, // 12: nacha.FileDetailsResponse.summary:type_name -> nacha.FileDetailsResponse.SummaryEntry
	7,  // 13: nacha.BatchDetails.header:type_name -> nacha.BatchHeader
	19, // 14: nacha.BatchDetails.entries:type_name -> nacha.EntryDetail
	10, // 15: nacha.BatchDetails.control:type_name -> nacha.BatchControl
	16, // 16: nacha.DetailResponse.batch:type_name -> nacha.BatchDetails
	19, // 17: nacha.DetailResponse.entry:type_name -> nacha.EntryDetail
	9,  // 18: nacha.EntryDetail.addenda_records:type_name -> nacha.AddendaRecord
	1,  // 19: nacha.NachaService.ValidateFile:input_type -> nacha.FileRequest
	4,  // 20: nacha.NachaService.CreateFile:input_type -> nacha.NachaFileRequest
	13, // 21: nacha.NachaService.ExportFile:input_type -> nacha.ExportRequest
	1,  // 22: nacha.NachaService.ViewFile:input_type -> nacha.FileRequest
	17, // 23: nacha.NachaService.ViewDetails:input_type -> nacha.DetailRequest
	2,  // 24: nacha.NachaService.ValidateFile:output_type -> nacha.ValidationResponse
	12, // 25: nacha.NachaService.CreateFile:output_type -> nacha.FileResponse
	14, // 26: nacha.NachaService.ExportFile:output_type -> nacha.ExportResponse
	15, // 27: nacha.NachaService.ViewFile:output_type -> nacha.FileDetailsResponse
	18, // 28: nacha.NachaService.ViewDetails:output_type -> nacha.DetailResponse
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_proto_nacha_proto_init() }
func file_api_proto_nacha_proto_init() {
	if File_api_proto_nacha_proto != nil {
		return
	}
	file_api_proto_nacha_proto_msgTypes[17].OneofWrappers = []any{
		(*DetailResponse_Batch)(nil),
		(*DetailResponse_Entry)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_nacha_proto_rawDesc), len(file_api_proto_nacha_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_nacha_proto_goTypes,
		DependencyIndexes: file_api_proto_nacha_proto_depIdxs,
		EnumInfos:         file_api_proto_nacha_proto_enumTypes,
		MessageInfos:      file_api_proto_nacha_proto_msgTypes,
	}.Build()
	File_api_proto_nacha_proto = out.File
	file_api_proto_nacha_proto_goTypes = nil
	file_api_proto_nacha_proto_depIdxs = nil
}
